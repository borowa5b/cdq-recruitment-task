import org.flywaydb.gradle.task.AbstractFlywayTask

buildscript {
    ext.flywayVersion = "11.5.0"

    dependencies {
        classpath("org.flywaydb:flyway-database-postgresql:$flywayVersion")
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "3.4.4"
    id "io.spring.dependency-management" version "1.1.7"
    id "org.flywaydb.flyway" version "11.4.0"
}

def lombokVersion = "1.18.36"
def flywayVersion = ext.flywayVersion

group = "pl.borowa5b"
version = "1.0.0"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // SPRING STARTERS
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // ID GENERATION
    implementation("io.viascom.nanoid:nanoid:1.0.1")

    // JOOQ
    implementation("org.jooq:jooq:3.20.3")

    // EXCEPTIONS
    implementation("org.zalando:problem:0.27.1")
    implementation("org.zalando:jackson-datatype-problem:0.27.1")

    // LOMBOK
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    compileOnly("org.projectlombok:lombok:$lombokVersion")

    // SWAGGER DOCS
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6")

    // DB
    implementation("org.postgresql:postgresql:42.7.5")
    implementation("org.flywaydb:flyway-core:$flywayVersion")
    implementation("org.flywaydb:flyway-database-postgresql:$flywayVersion")
    implementation("org.hibernate.validator:hibernate-validator:8.0.2.Final")

    // TESTS
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation("org.testcontainers:postgresql")
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

// Enable jUnit for tests
tasks.named("test") {
    useJUnitPlatform()
}

// Disable generating plain archive jar
tasks.named("jar") {
    enabled = false
}

// Add dependency to process resources before running flyway task so flyway recognizes changes in migration files
tasks.withType(AbstractFlywayTask).configureEach {
    dependsOn "processResources"
}

flyway {
    def applicationProperties = new Properties()
    applicationProperties.load(file("src/main/resources/application.properties").newInputStream())

    url = applicationProperties.getProperty("spring.datasource.url")
    user = applicationProperties.getProperty("spring.datasource.username")
    password = applicationProperties.getProperty("spring.datasource.password")
    locations = ["classpath:changesets"]
    cleanDisabled = false
}